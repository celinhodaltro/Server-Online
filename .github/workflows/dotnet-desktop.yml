name: Build .NET Applications

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    env:
      Api_Project_Path: ./Server/Server.API/Server.API.csproj
      WebApp_Project_Path: ./Application/Application.WebApp/Application.WebApp.csproj
      Game_Project_Path: ./Server/Server.Game/Server.Game.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore all projects
      run: |
        dotnet restore $env:Api_Project_Path
        dotnet restore $env:WebApp_Project_Path
        dotnet restore $env:Game_Project_Path

    - name: Build Server.API
      run: dotnet build $env:Api_Project_Path --configuration ${{ matrix.configuration }}

    - name: Build Application.WebApp
      run: dotnet build $env:WebApp_Project_Path --configuration ${{ matrix.configuration }}

    - name: Build Server.Game
      run: dotnet build $env:Game_Project_Path --configuration ${{ matrix.configuration }}

    - name: Publish Server.API
      run: dotnet publish $env:Api_Project_Path --configuration ${{ matrix.configuration }} --output ./output/Server.API

    - name: Publish Application.WebApp
      run: dotnet publish $env:WebApp_Project_Path --configuration ${{ matrix.configuration }} --output ./output/Application.WebApp

    - name: Publish Server.Game
      run: dotnet publish $env:Game_Project_Path --configuration ${{ matrix.configuration }} --output ./output/Server.Game

    - name: Create Archive
      run: |
        zip -r output.zip ./output

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: output
        path: output.zip
