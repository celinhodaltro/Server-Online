@page "/User/Index"
@inject CharacterService CharacterService
@inject AuthService AuthService

@inject NavigationManager NavigationManager

<style>
    .main {
        font-family: 'Cinzel', serif !important;
        color: white !important;
        background-image: url('/Images/User/Layout.jpeg') !important;
        background-size: cover;
        color: #fff;
        height: 102.5vh !important;
    }
</style>


<MudGrid style="padding:40px;" Class="main text-center">

    <MudItem xs="12" md="3">
        <MudCard>
            <MudCardContent>
                <Create />
            </MudCardContent>
        </MudCard>
    </MudItem>
    @if (Characters?.Count > 0)
        @foreach (var character in Characters)
        {
            <MudItem xs="12" md="3">
                <MudCard>
                    <MudCardContent>
                        <MudText Typo="Typo.h5">@character.Name <MudIcon Color="Color.Primary" Icon="@Icons.Material.Filled.Person" Title="Person" /></MudText>


                        <MudButtonGroup Class="mt-3" OverrideStyles="false">
                            <MudButton Variant="Variant.Outlined" Color="Color.Success" EndIcon="@Icons.Material.Filled.WorkspacePremium">Upgrade</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Primary" EndIcon="@Icons.Material.Filled.Delete">View</MudButton>
                            <MudButton Variant="Variant.Filled" Color="Color.Error" EndIcon="@Icons.Material.Filled.Delete">Delete</MudButton>
                        </MudButtonGroup>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
</MudGrid>



@code
{
    private List<Server.Entities.Character>? Characters;

    protected override async Task OnInitializedAsync()
    {

        if (!await AuthService.IsAuthenticated())
            NavigationManager.NavigateTo("Auth/Index");


        var UserId = await AuthService.GetUserId();
        Characters = await CharacterService.GetCharacters(UserId);
    }

}
