@page "/User/Character/Create"
@using Server.Entities
@using Server.Entities.Common.Characters
@inject CharacterService CharacterService
@inject AuthService AuthService
@inject NavigationManager NavigationManager


<MudText Align="Align.Center" Typo="Typo.h4"> <MudIcon Color="Color.Primary" Icon="@Icons.Material.Filled.Person" Title="Person" />  </MudText>
<EditForm Model="@Character" OnSubmit="CreateCharacter">


        <MudTextField T="string"
                      @bind-Value="@Character.Name"
                      Variant="Variant.Outlined"
                      ShrinkLabel="true"
                      InputType="InputType.Text"
                      Label="Name"
                      Class="mt-4"/>


    <MudSelect Class="mt-4" AnchorOrigin="Origin.BottomCenter" @bind-Value="@Character.Gender" Label="Gender">
        <MudSelectItem Value="Gender.Male"> <MudIcon Color="Color.Info" Icon="@Icons.Material.Filled.Male" Title="Male" /> Male </MudSelectItem>
        <MudSelectItem Value="Gender.Female"> <MudIcon Color="Color.Secondary" Icon="@Icons.Material.Filled.Female" Title="Female" /> Female </MudSelectItem>
    </MudSelect>

    <MudButton Class="mt-4" ButtonType="ButtonType.Submit" EndIcon="@Icons.Material.Filled.Add" Variant="Variant.Filled" Color="Color.Success"> Create </MudButton>

    <DataAnnotationsValidator />
    <ValidationSummary />
</EditForm>


@code {
    private Character? Character { get; set; } = new Character();

    private async Task CreateCharacter()
    {
        var User = await AuthService.GetUser();

        if(User is {Id: 0 })
            NavigationManager.NavigateTo("Auth/Index");

        Character.UserId = User.Id;

        await CharacterService.CreateCharacter(this.Character);
    }
}
